name: mini-css-extract-plugin

on:
  push:
    branches:
      - master
      - next
  pull_request:
    branches:
      - master
      - next

permissions:
  contents: read

jobs:
  lint:
    name: Lint - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: lint-${{ matrix.os }}-v${{ matrix.node-version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build types
        run: npm run build:types

      - name: Check types
        run: if [ -n "$(git status types --porcelain)" ]; then echo "Missing types. Update types by running 'npm run build:types'"; exit 1; else echo "All types are valid"; fi

      - name: Security audit
        run: npm run security

      - name: Check commit message
        uses: wagoid/commitlint-github-action@v5

  test:
    name: Test - ${{ matrix.os }} - Node v${{ matrix.node-version }}, Webpack ${{ matrix.webpack-version }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [12.x, 14.x, 16.x, 18.x, 20.x]
        webpack-version: [latest]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: test-${{ matrix.os }}-v${{ matrix.node-version }}-${{ matrix.webpack-version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Setup Git
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install webpack ${{ matrix.webpack-version }}
        if: matrix.webpack-version != 'latest'
        run: npm i webpack@${{ matrix.webpack-version }}

      - name: Run tests for webpack version ${{ matrix.webpack-version }}
        run: npm run test:coverage -- --ci

      - name: Submit coverage data to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-old-api:
    name: Test - ${{ matrix.os }} - Node v${{ matrix.node-version }}, Webpack latest, old API

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [12.x, 14.x, 16.x, 18.x, 20.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Git
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests for webpack version latest with experimentalUseImportModule
        run: npm run test:coverage -- --ci
        env:
          OLD_API: "true"

      - name: Submit coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
